CODE SEGMENT
	ASSUME CS:CODE
	IOCONPT	EQU 0FF2BH
	IOCPT	EQU 0FF2AH
	IOBPT	EQU 0FF29H
	IOAPT	EQU 0FF28H
		ORG 1630H
START:	JMP START0
	KZ	DB ?
	time	DW ?
	flag	DW ?
START0:	MOV AL,89H
	MOV DX,IOCONPT
	OUT DX,AL
	MOV time,1000H
	MOV flag,00H
READKEY:CALL KEY
	TEST KZ,01H;K1 
	JNZ NX1
	CALL ZZ ;POS 
	JMP NX2
NX1:	TEST KZ,02H;K2
	JNZ NX2
	CALL FZ
NX2:	TEST KZ,04H
	JNZ NX3
	CALL adds ; speed up 
NX3:	JMP READKEY; return 
ZZ:	MOV flag,00H
	MOV DX,IOAPT
	MOV AL,03H
	OUT DX,AL
	CALL delay
	MOV AL,06H	
	MOV DX,IOAPT
	OUT DX,AL
	CALL delay
	MOV AL,0CH
	MOV DX,IOAPT
	OUT DX,AL
	CALL delay
	MOV AL,09H
	MOV DX,IOAPT
	OUT DX,AL
	CALL delay
	RET
FZ:	MOV flag,01H
	MOV DX,IOAPT
	MOV AL,09H
	OUT DX,AL
	CALL delay
	MOV AL,0CH	
	MOV DX,IOAPT
	OUT DX,AL
	CALL delay
	MOV AL,06H
	MOV DX,IOAPT
	OUT DX,AL
	CALL delay
	MOV AL,03H
	MOV DX,IOAPT
	OUT DX,AL
	CALL delay
	RET
adds:	CALL del10ms
	MOV DX,IOCPT
adds1:	IN AL,DX
	TEST AL,04H
	JNZ exit
adds3:	MOV DX,IOCPT
	IN AL,DX
	TEST AL,04H
	JZ adds4
	JMP adds5
adds4: 	CMP flag,00H
	JZ adds6
	CALL FZ
	JMP adds3
adds6:  CALL ZZ
	JMP adds3
adds5:	MOV AX,time
	SUB AX,100H
	CMP AX,300H
	JNZ adds2
	MOV AX,1000H
adds2:	MOV time,AX
exit:	RET

KEY:	MOV DX,IOCPT
	IN AL,DX
	MOV KZ,AL
	RET
delay:	MOV CX,time
	LOOP $
	RET
del10ms:MOV CX,2800
	LOOP $
	RET
CODE	ENDS
	END START
